Goto the weekly download section of Artix (https://artixlinux.org/download.php#weekly) and download the "base-openrc" version.
Install VM-player and generate new VM (min. 20 GB of free disk space and 1 GB of RAM in your system). 
Start VM/ISO. 
A window appears where you can change to your prefeered language and keybord. 
Then click on “Boot Arch Linux (x86_64) from iso". The system will start booting. 
After system has booted start typing:

	artix:[artix]# loadkeys <your-preferred-keyoard-layout> 
	artix:[artix]# sudo  mkfs.ext4 -L ROOT /dev/sda 
	artix:[artix]# sudo mount /dev/sda /mnt
	artix:[artix]# basestrap /mnt base base-devel linux-lts linux-firmware openrc elogind-openrc nano dhcpd sudo grub os-prober
	artix:[artix]# su
	root:[root]# genfstab /mnt >> /mnt/etc/fstab
	root:[root]# artools-chroot /mnt
	/bin/sh5 # nano /etc/locale.gen	 (Select language configuration "en_US.UTF-8 UTF-8","de_DE.UTF-8 UTF-8" by deleting the #)
	/bin/sh5 # locale-gen
	/bin/sh5 # nano /etc/locale.conf 	(Add your language to the system by adding this line: export "LANG=en_US.UTF-8" LANG=de_DE.UTF-8)
	/bin/sh5 # echo KEYMAP=de-latin1-nodeadkeys > /etc/vconsole.conf
	/bin/sh5 # nano /etc/conf.d/keymaps 	   (add: keymap="de-latin1")
	/bin/sh5 # ln –sf /usr/share/zoneinfo/Europe/Berlin /etc/localtime 	(List of all the zones of the world: ls /usr/share/zoneinfo)
	/bin/sh5 # hwclock --systohc
	/bin/sh5 # passwd 			   (type your password)
	/bin/sh5 # nano /etc/hostname		 (type any name)
	/bin/sh5 # ip -s link                	   	(Get the exact name of your interface)
	/bin/sh5 # nano /etc/conf.d/net         	 (Add config_<interface>="dhcp")
	/bin/sh5 # ln -s /etc/init.d/net.lo /etc/init.d/net.<interface>
	/bin/sh5 # rc-update add net.<interface> default
	/bin/sh5 # rc-update add dhcpcd default
	/bin/sh5 # pacman -S sudo nano make gcc which autoconf automake pkgconf patch bison flex cmake rpcsvc-proto gperf python intltool re2c diffutils gtk-doc
	/bin/sh5 # nano /etc/pacman.conf # enable lib32 repositories by uncomment the [lib32] sections: 
					[lib32]
					Include = /etc/pacman.d/mirrorlist
                                        )
	/bin/sh5 # pacman -Syy
	/bin/sh5 # pacman -S sudo lib32-glibc lib32-gcc-libs lib32-zlib git wget
	/bin/sh5 # nano /etc/sudoer 	   	(To allow members of group wheel sudo access: %wheel      ALL=(ALL) ALL)
	/bin/sh5 # useradd -m aG wheel <username>
	/bin/sh5 # passwd <username>

	/bin/sh5 # grub-install --recheck /dev/sda
	/bin/sh5 # grub-mkconfig –o /boot/grub/grub.cfg
	/bin/sh5 # exit
	root:[root]# reboot
  
Login as <username> and type:

  [<username>@PC-NAME ~]$ cd $HOME
  [<username>@PC-NAME ~]$ git config --global core.eol lf
  [<username>@PC-NAME ~]$ git config --global core.autocrlf false
  [<username>@PC-NAME ~]$ git clone https://bitbucket.org/pedro311/freshtomato-mips 
  [<username>@PC-NAME ~]$ git clone https://bitbucket.org/pedro311/freshtomato-arm
  [<username>@PC-NAME ~]$ git clone https://github.com/st-ty1/Artix_FreshTomato  
  [<username>@PC-NAME ~]$ cd Artix_FreshTomato
  [<username>@PC-NAME Artix_FreshTomato]$ chmod 744 *.sh  
  [<username>@PC-NAME Artix_FreshTomato]$ ./build_ft-arm.sh (or ./build_ft-arm7.sh or ./build_ft-mips-RT-AC.sh or ./build_ft-mips-RT-N.sh or ./build_ft-mips-RT.sh)
