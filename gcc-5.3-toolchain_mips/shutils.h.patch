--- a/release/src/router/shared/shutils.h	2022-01-24 14:05:37.496249900 +0100
+++ b/gcc-5.3-toolchain_mips/shutils.h	2021-12-31 12:30:09.000000000 +0100
@@ -137,7 +137,7 @@
 
 /* Check for a blank character; that is, a space or a tab */
 #ifndef isblank
-#define isblank(c) ((c) == ' ' || (c) == '\t')
+#define isblank(c) (c == ' ' || c == '\t')
 #endif
 
 /* Strip trailing CR/NL from string <s> */
@@ -182,6 +182,20 @@
 	     word[sizeof(word) - 1] = '\0', \
 	     next = strchr(next, ' '))
 
+/* Copy each token in wordlist delimited by ascii_58 into word */
+#define foreach_58(word, wordlist, next) \
+		for (next = &wordlist[strspn(wordlist, ":")], \
+				strncpy(word, next, sizeof(word)), \
+				word[strcspn(word, ":")] = '\0', \
+				word[sizeof(word) - 1] = '\0', \
+				next = strchr(next, ':'); \
+				strlen(word); \
+				next = next ? &next[strspn(next, ":")] : "", \
+				strncpy(word, next, sizeof(word)), \
+				word[strcspn(word, ":")] = '\0', \
+				word[sizeof(word) - 1] = '\0', \
+				next = strchr(next, ':'))
+
 /* Copy each token in wordlist delimited by ascii_60 into word */
 #define foreach_60(word, wordlist, next) \
 	for (next = &wordlist[strspn(wordlist, "<")], \
@@ -214,7 +228,7 @@
 #define safe_getenv(s) (getenv(s) ? : "")
 
 //#define dbg(fmt, args...) do { FILE *fp = fopen("/dev/console", "w"); if (fp) { fprintf(fp, fmt, ## args); fclose(fp); } } while (0)
-#define dbg(fmt, args...) do { FILE *fp = fopen("/dev/console", "w"); if (fp) { fprintf(fp, fmt, ## args); fclose(fp); } else fprintf(stderr, fmt, ## args); } while (0)
+extern void dbg(const char * format, ...);
 #define dbG(fmt, args...) dbg("%s(0x%04x): " fmt , __FUNCTION__ , __LINE__, ## args)
 extern void cprintf(const char *format, ...);
 
@@ -233,7 +247,7 @@
  *		for unit and/or subuint to ignore the value.
  */
 extern int get_ifname_unit(const char* ifname, int *unit, int *subunit);
-#if 0
+
 /*
  * Set the ip configuration index given the eth name
  * Updates both wlXX_ipconfig_index and lanYY_ifname.
@@ -251,6 +265,7 @@
  * @return	index or -1 if not found
  */
 extern int get_ipconfig_index(char *eth_ifname);
+
 /*
  * Get interfaces belonging to a specific bridge.
  *
@@ -259,7 +274,7 @@
  */
 extern char *
 get_bridged_interfaces(char *bridge_name);
-#endif
+
 /*
 		remove_from_list
 		Remove the specified word from the list.
@@ -289,6 +304,10 @@
 
 extern char *remove_dups(char *inlist, int inlist_size);
 
+extern char *find_smallest_in_list(char *haystack);
+
+extern char *sort_list(char *inlist, int inlist_size);
+
 extern int nvifname_to_osifname(const char *nvifname, char *osifname_buf,
                                 int osifname_buf_len);
 extern int osifname_to_nvifname(const char *osifname, char *nvifname_buf,
@@ -296,11 +315,9 @@
 
 int ure_any_enabled(void);
 
-int is_hwnat_loaded(void);
+#define is_hwnat_loaded() module_loaded("hw_nat")
 
 extern int _vstrsep(char *buf, const char *sep, ...);
 #define vstrsep(buf, sep, args...) _vstrsep(buf, sep, args, NULL)
 
-extern char *sort_list(char *inlist, int inlist_size);
-
 #endif /* _shutils_h_ */
