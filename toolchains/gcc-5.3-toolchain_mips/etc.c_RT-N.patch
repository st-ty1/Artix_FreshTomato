--- etc.c.orig	2022-02-10 23:04:27.258696800 +0100
+++ etc.c	2022-02-10 23:04:13.718696800 +0100
@@ -376,13 +376,13 @@
 
 	case ETCPHYRD2:
 		if (vec) {
-			uint phyaddr, reg;
+			uint phyaddr;
 			phyaddr = vec[0] >> 16;
 			if (phyaddr < MAXEPHY) {
-				reg = vec[0] & 0xffff;
-				vec[1] = (*etc->chops->phyrd)(etc->ch, phyaddr, reg);
+/*				reg = vec[0] & 0xffff; */
+				vec[1] = (*etc->chops->phyrd)(etc->ch, phyaddr, vec[0] & 0xffff);
 				ET_TRACE(("etc_ioctl: ETCPHYRD2 of phy 0x%x, reg 0x%x => 0x%x\n",
-				          phyaddr, reg, vec[1]));
+				          phyaddr, vec[0] & 0xffff, vec[1]));
 			}
 		}
 		break;
@@ -401,18 +401,18 @@
 
 	case ETCPHYWR2:
 		if (vec) {
-			uint phyaddr, reg;
+			uint phyaddr;
 			phyaddr = vec[0] >> 16;
 			if (phyaddr < MAXEPHY) {
-				reg = vec[0] & 0xffff;
-				(*etc->chops->phywr)(etc->ch, phyaddr, reg, (uint16)vec[1]);
+/*				reg = vec[0] & 0xffff; */
+				(*etc->chops->phywr)(etc->ch, phyaddr, vec[0] & 0xffff, (uint16)vec[1]);
 #ifdef ETROBO
 				/* Invalidate current robo page */
-				if (etc->robo && phyaddr == EPHY_NOREG && reg == 0x10)
+				if (etc->robo && phyaddr == EPHY_NOREG && (vec[0] & 0xffff) == 0x10)
 					((robo_info_t *)etc->robo)->page = -1;
 #endif
 				ET_TRACE(("etc_ioctl: ETCPHYWR2 to phy 0x%x, reg 0x%x <= 0x%x\n",
-				          phyaddr, reg, vec[1]));
+				          phyaddr, vec[0] & 0xffff, vec[1]));
 			}
 		}
 		break;
@@ -436,16 +436,16 @@
 
 	case ETCROBOWR:
 		if (etc->robo && vec) {
-			uint page, reg;
+			uint page;
 			uint16 val;
 			robo_info_t *robo = (robo_info_t *)etc->robo;
 
 			page = vec[0] >> 16;
-			reg = vec[0] & 0xffff;
+/*			reg = vec[0] & 0xffff; */
 			val = vec[1];
 			robo->ops->write_reg(etc->robo, page, vec[0], &val, 2);
 			ET_TRACE(("etc_ioctl: ETCROBOWR to page 0x%x, reg 0x%x <= 0x%x\n",
-			          page, reg, val));
+			          page,  vec[0] & 0xffff, val));
 		}
 		break;
 #endif /* ETROBO */
