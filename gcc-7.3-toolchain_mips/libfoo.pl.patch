--- libfoo.pl.orig	2022-04-01 15:46:08.000000000 +0000
+++ libfoo.pl	2022-04-01 15:10:49.000000000 +0000
@@ -94,7 +94,7 @@
 	while (<$f>) {
 		print LOG;
 
-		if (/\s+(WEAK|GLOBAL)\s+(?:DEFAULT|VISIBLE)\s+(\w+)\s+(\w+)/) {
+		if (/\s+(WEAK|GLOBAL)\s+(?:DEFAULT|VISIBLE|PROTECTED)\s+(\w+)\s+(\w+)/) {
 			$s = $3;
 			if ($2 eq 'UND') {
 				if ($1 eq 'GLOBAL') {
@@ -328,6 +328,11 @@
 	fixDynDep("avahi-daemon", "libavahi-common.so.3.5.3");
 	fixDynDep("avahi-daemon", "libexpat.so.1.6.2");
 	fixDynDep("avahi-daemon", "libdaemon.so.0.5.0");
+
+### uClibc-ng 1.0.28
+	fixDynDep("libstdc++.so.6", "ld-uClibc.so.0");
+	fixDynDep("apcupsd", "ld-uClibc.so.0");
+	fixDynDep("tor","ld-uClibc.so.0");
 }
 
 sub usersOf
@@ -515,7 +520,7 @@
 	print LOG "\n\n${base}\n";
 	
 #	$cmd = "mipsel-uclibc-ld -shared -s -z combreloc --warn-common --fatal-warnings ${opt} -soname ${name} -o ${so}";
-	$cmd = "mipsel-uclibc-gcc -shared -nostdlib -Wl,-s,-z,combreloc -Wl,--warn-common -Wl,--fatal-warnings -Wl,--gc-sections ${opt} -Wl,-soname=${name} -o ${so}";
+	$cmd = "mipsel-brcm-linux-uclibc-gcc -shared -nostdlib -Wl,-s,-z,combreloc -Wl,--warn-common -Wl,--gc-sections -Wl,--fatal-warnings ${opt} -Wl,-soname=${name} -o ${so}";
 	foreach (@{$elf_lib{$name}}) {
 		if ((!$elf_dyn{$name}{$_}) && (/^lib(.+)\.so/)) {
 			$cmd .= " -l$1";
@@ -585,14 +590,14 @@
 	$stripshared = "no";
 }
 
-genSO("${root}/lib/libc.so.0", "${uclibc}/lib/libc.a", "", "-Wl,-init=__uClibc_init ${uclibc}/lib/optinfo/interp.os");
-genSO("${root}/lib/libresolv.so.0", "${uclibc}/lib/libresolv.a", "${stripshared}");
-genSO("${root}/lib/libcrypt.so.0", "${uclibc}/lib/libcrypt.a", "${stripshared}");
-genSO("${root}/lib/libm.so.0", "${uclibc}/lib/libm.a");
-genSO("${root}/lib/libpthread.so.0", "${uclibc}/lib/libpthread.a", "${stripshared}", "-u pthread_mutexattr_init -Wl,-init=__pthread_initialize_minimal_internal");
-genSO("${root}/lib/libutil.so.0", "${uclibc}/lib/libutil.a", "${stripshared}");
-#genSO("${root}/lib/libdl.so.0", "${uclibc}/lib/libdl.a", "${stripshared}");
-#genSO("${root}/lib/libnsl.so.0", "${uclibc}/lib/libnsl.a", "${stripshared}");
+#genSO("${root}/lib/libc.so.0", "${uclibc}/mipsel-brcm-linux-uclibc/sysroot/usr/lib/libc.a", "", "-Wl,-init=__uClibc_init ${uclibc}/lib/optinfo/interp.os");
+#genSO("${root}/lib/libresolv.so.0", "${uclibc}/mipsel-brcm-linux-uclibc/sysroot/usr/lib/libresolv.a", "${stripshared}");
+#genSO("${root}/lib/libcrypt.so.0", "${uclibc}/mipsel-brcm-linux-uclibc/sysroot/usr/lib/libcrypt.a", "${stripshared}");
+#genSO("${root}/lib/libm.so.0", "${uclibc}/mipsel-brcm-linux-uclibc/sysroot/usr/lib/libm.a");
+#genSO("${root}/lib/libpthread.so.0", "${uclibc}/mipsel-brcm-linux-uclibc/sysroot/usr/lib/libpthread.so", "${stripshared}",);
+#genSO("${root}/lib/libutil.so.0", "${uclibc}/mipsel-brcm-linux-uclibc/sysroot/usr/lib/libutil.a", "${stripshared}");
+#genSO("${root}/lib/libdl.so.0", "${uclibc}/mipsel-brcm-linux-uclibc/sysroot/usr/lib/libdl.a", "${stripshared}");
+#genSO("${root}/lib/libnsl.so.0", "${uclibc}/mipsel-brcm-linux-uclibc/sysroot/usr/lib/libnsl.a", "${stripshared}");
 
 if ($openssldir eq "openssl") {
 	genSO("${root}/usr/lib/libcrypto.so.1.0.0", "${router}/${openssldir}/libcrypto.a");
@@ -616,16 +621,21 @@
 genSO("${root}/usr/lib/libavformat.so.52", "${router}/ffmpeg/libavformat/libavformat.a", "", "-L${router}/ffmpeg/libavutil -L${router}/ffmpeg/libavcodec -L${router}/zlib");
 
 genSO("${root}/usr/lib/liblzo2.so.2.0.0", "${router}/lzo/src/.libs/liblzo2.a");
-#genSO("${root}/usr/lib/libiptc.so", "${router}/iptables/libiptc/libiptc.a");
-#genSO("${root}/usr/lib/libshared.so", "${router}/shared/libshared.a");
-#genSO("${root}/usr/lib/libnvram.so", "${router}/nvram/libnvram.a");
-#genSO("${root}/usr/lib/libusb-1.0.so.0", "${router}/libusb10/libusb/.libs/libusb-1.0.a");
-#genSO("${root}/usr/lib/libusb-0.1.so.4", "${router}/libusb/libusb/.libs/libusb.a", "", "-L${router}/libusb10/libusb/.libs");
+genSO("${root}/usr/lib/libiptc.so", "${router}/iptables/libiptc/libiptc.a");
+genSO("${root}/usr/lib/libshared.so", "${router}/shared/libshared.a");
+genSO("${root}/usr/lib/libnvram.so", "${router}/nvram/libnvram.a");
+genSO("${root}/usr/lib/libusb-1.0.so.0", "${router}/libusb10/libusb/.libs/libusb-1.0.a");
+genSO("${root}/usr/lib/libusb-0.1.so.4", "${router}/libusb/libusb/.libs/libusb.a", "", "-L${router}/libusb10/libusb/.libs");
 
 genSO("${root}/usr/lib/libbcmcrypto.so", "${router}/libbcmcrypto/libbcmcrypto.a");
 
 #shibby
-genSO("${root}/usr/lib/libcurl.so.4.7.0", "${router}/libcurl/lib/.libs/libcurl.a", "", "-L${router}/zlib -L${router}/${openssldir}");
+if ($openssldir eq "openssl") {
+	genSO("${root}/usr/lib/libcurl.so.4.7.0", "${router}/libcurl/lib/.libs/libcurl.a", "", "-L${router}/zlib -L${router}/openssl");
+}
+else {
+	genSO("${root}/usr/lib/libcurl.so.4.7.0", "${router}/libcurl/lib/.libs/libcurl.a", "", "-L${router}/zlib -L${router}/openssl-1.1");
+}
 genSO("${root}/usr/lib/libevent-2.1.so.7", "${router}/libevent/.libs/libevent.a");
 genSO("${root}/usr/lib/libdaemon.so.0.5.0", "${router}/libdaemon/libdaemon/.libs/libdaemon.a");
 genSO("${root}/usr/lib/libiconv.so.2.6.1", "${router}/libiconv/lib/.libs/libiconv.a");
